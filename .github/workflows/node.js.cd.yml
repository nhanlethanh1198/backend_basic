# This is a basic workflow to help you get started with Actions

name: Node.js CI/CD

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ "main" ]
#  env:
#    SESSION_SECRET: vars.SESSION_SECRET
#    SESSION_NAME: vars.SESSION_NAME
#    SESSION_KEYS: vars.SESSION_KEYS
#    SESSION_MAX_AGE: vars.SESSION_MAX_AGE
#    SESSION_RESAVE: vars.SESSION_RESAVE

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            
            Repository: ${{ github.repository }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
        


  build:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: notify

    strategy:
      matrix:
        node-version: [ 18.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Telegram Notify
        uses: appleboy/telegram-action@0.0.3
        to: ${{ secrets.TELEGRAM_GROUP_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.actor }} created commit:
          Commit message: ${{ github.event.commits[0].message }}
          
          Repository: ${{ github.repository }}
          
          See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}


      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: yarn install
      - run: yarn build
#      - run: yarn start
#      - run: |
#          curl -X GET "http://localhost:5050"

  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_VPS_KEY }}
          port: 22
          script: |
            cd /var/server/backend_basic
            git pull origin main
            sudo yarn install
            sudo yarn build
            pm2 restart 0 --update-env